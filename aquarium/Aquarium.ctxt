#BlueJ class context
comment0.params=
comment0.target=Aquarium()
comment0.text=\ \r\n\ Creates\ an\ empty\ Aquarium.\r\n\ \r\n\ @see\ \ \ \ \ fillWithCreatures\r\n
comment1.params=evt
comment1.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment10.params=
comment10.target=boolean\ isRunning()
comment10.text=\r\n\ Returns\ true\ if\ the\ Aquarium\ simulation\ is\ running.\r\n\ \r\n\ @return\ \ true\ if\ the\ Aquarium\ simulation\ is\ running\r\n
comment2.params=
comment2.target=java.util.List\ getCreatures()
comment2.text=\r\n\ Gets\ the\ creatures\ in\ the\ Aquarium.\r\n\ \r\n\ Make\ sure\ you\ synchronize\ access\ to\ the\ collection\ with\ a\ synchronized\ block.\r\n\ \r\n\ @return\ \ \ \ \ The\ list\ of\ Creature\ objects\ inhabiting\ the\ Aquarium.\r\n
comment3.params=c
comment3.target=void\ addCreature(creatures.Creature)
comment3.text=\r\n\ Adds\ a\ Creature\ to\ the\ Aquarium.\r\n\ \r\n\ @param\ c\ The\ Creature\ to\ add.\r\n
comment4.params=
comment4.target=void\ fillWithCreatures()
comment4.text=\r\n\ Fills\ the\ Aquarium\ by\ creating\ and\ adding\ {@link\ Creature}s.\r\n
comment5.params=
comment5.target=void\ empty()
comment5.text=\r\n\ Empties\ the\ Aquarium\ by\ removing\ all\ creatures.\r\n
comment6.params=frame
comment6.target=void\ setFrame(ui.AquariumFrame)
comment6.text=\r\n\ Sets\ the\ parent\ {@link\ AquariumFrame}\ for\ this\ Aquarium.\r\n\ \r\n\ @param\ \ \ frame\ \ \ The\ {@link\ AquariumFrame}\ for\ this\ Aquarium.\r\n
comment7.params=
comment7.target=void\ updateCreatureLocations()
comment7.text=\r\n\ <p>Calls\ the\ {@link\ Creature\#updateLocation}\ method\ for\ each\ {@link\ Creature}\ in\ the\r\n\ Aquarium,\ and\ then\ calls\ event\ methods\ in\ order.</p>\r\n\r\n\ <ol>\r\n\ <li>{@link\ Creature\#hitClouds}\ if\ the\ Creature\ has\ touched\ or\ gone\ past\ the\ top\ of\ the\ sky.\r\n\ <li>{@link\ Creature\#hitSurface}\ if\ the\ Creature\ is\ touching\ the\ surface\ of\ the\ water;\r\n\ <li>{@link\ Creature\#hitFloor}\ if\ the\ bottom\ edge\ of\ the\ Creature\ has\ touched\ or\ gone\r\n\ past\ the\ Aquarium\ floor;\r\n\ <li>{@link\ Creature\#hitLeftWall}\ if\ the\ left\ edge\ of\ the\ Creature\ has\ touched\ or\ gone\r\n\ past\ the\ left\ wall;\r\n\ <li>{@link\ Creature\#hitRightWall}\ if\ the\ right\ edge\ of\ the\ Creature\ has\ touched\ or\ gone\r\n\ past\ the\ right\ wall;\r\n\ </ol>\r\n\ \r\n\ <p>These\ methods\ are\ called\ only\ once\ for\ a\ given\ movement.\ For\ example,\ if\ a\ creature\ approaches\r\n\ and\ touches\ the\ left\ wall,\ then\ stays\ on\ or\ past\ the\ wall,\ {@link\ Creature\#hitLeftWall}\ will\ be\r\n\ called\ only\ once.\ If\ the\ creature\ reapproaches\ the\ wall\ and\ moves\ past\ it\ in\ the\ other\ direction,\r\n\ {@link\ Creature\#hitLeftWall}\ will\ be\ called\ again.</p>\r\n\ <p>\r\n\ A\ {@link\ Creature}\ can\ cause\ more\ than\ one\ event\ to\ be\ triggered\ simultaneously;\ for\ example,\ \r\n\ if\ a\ {@link\ Creature}\ moves\ from\ below\ the\ floor\ to\ above\ the\ clouds,\ {@link\ Creature\#hitClouds},\r\n\ {@link\ Creature\#hitSurface},\ and\ {@link\ Creature\#hitFloor}\ will\ all\ be\ called.</p>\r\n<p>\r\n\ If\ multiple\ events\ occur\ at\ once,\ they\ will\ be\ called\ in\ the\ order\ they\ are\ listed\ above.</p>\r\n
comment8.params=
comment8.target=void\ start()
comment8.text=\r\n\ Starts\ the\ Aquarium\ animation.\r\n
comment9.params=
comment9.target=void\ stop()
comment9.text=\r\n\ Stops\ the\ Aquarium\ animation.\r\n
numComments=11
